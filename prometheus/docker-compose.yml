version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: { }

services:
  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: elasticsearch-exporter
    restart: unless-stopped
    command:
      - '--es.uri=https://es01:9200'
      - '--es.uri=https://es02:9200'
      - '--es.uri=https://es03:9200'
      - '--es.username=elastic'
      - '--es.password=${ELASTIC_PASSWORD}'
      - '--es.ssl.ca=/usr/share/elasticsearch/config/certs/ca/ca.crt'
    ports:
      - "9114:9114"
    networks:
      - monitoring
    volumes:
      - ./path/to/ca.crt:/usr/share/elasticsearch/config/certs/ca/ca.crt

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - elasticsearch-exporter
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      # 프로메테우스 설정 파일을 지정합니다.
      - '--config.file=/etc/prometheus/prometheus.yml'
      # 프로메테우스가 수집한 데이터를 저장할 경로를 지정합니다.
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - monitoring